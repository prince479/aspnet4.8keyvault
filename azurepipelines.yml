trigger:
 - main

pool: aks-windows-pool


variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  imageRepository: 'dev-aspnet4.8-repo'
  containerRegistry: 'acrmediawestus3.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  dockerRegistryServiceConnection: 'acrmedianonprod-connection'

stages:

- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool: aks-windows-pool
    steps:
    
    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: 'acrmedianonprod-connection'
        tags: |
          $(tag)
- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool: aks-windows-pool
    environment: 'Private-Aks-dev'
    strategy:
      runOnce:
        deploy:
          steps:
        
          - task: KubernetesManifest@0
            inputs:
             action: 'deploy'
             namespace: 'dev-aspnet-app'
             kubernetesServiceConnection: 'aks-media-nonprod-conn'
             manifests: |
                **/deploy.yml
             containers: |
                $(containerRegistry)/$(imageRepository):$(tag)
          - task: KubernetesManifest@0
            displayName: patching env variables
            inputs:
             action: 'patch'
             kind: 'deployment'
             name: dev-aspnet-webapp
             namespace: 'dev-aspnet-app'
             kubernetesServiceConnection: 'aks-media-nonprod-conn'
             patch: '{"spec":{"template":{"spec":{"containers":[{"name":"dev-apsnet-webapp","image":"acrmediawestus3.azurecr.io/dev-aspnet4.8-repo:$(Build.BuildId)","env":[{"name":"KeyVault_URI","value":"$(KeyVault_URI)"},{"name":"SecretName","value":"$(SecretName)"},{"name":"UserAssignedClientId","value":"$(UserAssignedClientId)"}]}]}}}}'